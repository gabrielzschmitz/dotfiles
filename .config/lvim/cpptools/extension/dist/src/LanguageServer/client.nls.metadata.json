{
	"messages": [
		"Unable to start the C/C++ language server. IntelliSense features will be disabled. Error: {0}",
		"EPERM: Check permissions for '{0}'",
		"Unable to start the C/C++ language server. IntelliSense features will be disabled. Error: {0}",
		"Select a compiler to configure for IntelliSense",
		"How would you like to configure IntelliSense for the '{0}' folder?",
		"How would you like to configure IntelliSense this folder?",
		"Found at {0}",
		"Use {0}",
		"configuration providers",
		"compilers",
		"You do not have IntelliSense configured. Unless you set your own configurations, IntelliSense may not be functional.",
		"Select IntelliSense Configuration...",
		"Use {0}",
		"Use {0}",
		"Select another compiler on my machine...",
		"Help me install a compiler",
		"Do not configure with a compiler (not recommended)",
		"Select Compiler",
		"Yes",
		"The compiler {0} was found. Do you want to configure IntelliSense with this compiler?",
		"Select IntelliSense Configuration...",
		"Yes",
		"The compiler {0} was found. Do you want to configure IntelliSense with this compiler?",
		"The language server crashed. Restarting...",
		"The language server crashed 5 times in the last 3 minutes. It will not be restarted.",
		"{0} has changed to: {1}",
		"Dismiss",
		"Disable Warnings",
		"{0} is unable to provide IntelliSense configuration information for '{1}'. Settings from the '{2}' configuration will be used instead.",
		"The requested configuration name is not found: {0}",
		"Unsupported client",
		"Unsupported client",
		"Timed out in {0}ms.",
		"Update IntelliSense time (sec): {0}",
		"Configure (JSON)",
		"Configure (UI)",
		"Don't Show Again",
		"Update your IntelliSense settings or use Vcpkg to install libraries to help find missing headers.",
		"Configure your IntelliSense settings to help find missing headers.",
		"{0} would like to configure IntelliSense for the '{1}' folder.",
		"{0} would like to configure IntelliSense for this folder.",
		"Allow",
		"Don't Allow",
		"Ask Me Later",
		"a compile_commands.json file",
		"Would you like to use {0} to auto-configure IntelliSense for the '{1}' folder?",
		"Would you like to use {0} to auto-configure IntelliSense for this folder?",
		"Yes",
		"No",
		"Ask Me Later",
		"Custom configurations received:",
		"Custom browse configuration received: {0}",
		" Declaration/definition was copied."
	],
	"keys": [
		"unable.to.start",
		"check.permissions",
		"unable.to.start",
		"select.compiler",
		"configure.intelliSense.forFolder",
		"configure.intelliSense.thisFolder",
		"found.string",
		"use.compiler",
		"configuration.providers",
		"compilers",
		"setCompiler.message",
		"selectIntelliSenseConfiguration.string",
		"use.provider",
		"use.compileCommands",
		"selectAnotherCompiler.string",
		"installCompiler.string",
		"noConfig.string",
		"selectCompiler.string",
		"confirmCompiler.string",
		"selectCompiler.message",
		"selectIntelliSenseConfiguration.string",
		"confirmCompiler.string",
		"selectCompiler.message",
		"server.crashed.restart",
		"server.crashed2",
		{
			"key": "loggingLevel.changed",
			"comment": [
				"{0} is the setting name 'loggingLevel', {1} is a string value such as 'Debug'"
			]
		},
		"dismiss.button",
		"diable.warnings.button",
		"unable.to.provide.configuration",
		"config.not.found",
		"unsupported.client",
		"unsupported.client",
		"timed.out",
		"update.intellisense.time",
		"configure.json.button",
		"configure.ui.button",
		"dont.show.again",
		"update.your.intellisense.settings",
		"configure.your.intellisense.settings",
		"provider.configure.folder",
		"provider.configure.this.folder",
		"allow.button",
		"dont.allow.button",
		"ask.me.later.button",
		"a.compile.commands.file",
		"auto-configure.intellisense.folder",
		"auto-configure.intellisense.this.folder",
		"yes.button",
		"no.button",
		"ask.me.later.button",
		"configurations.received",
		"browse.configuration.received",
		"fallback.clipboard"
	],
	"filePath": "src\\LanguageServer\\client"
}