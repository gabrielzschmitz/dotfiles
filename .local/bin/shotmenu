#!/bin/sh
#         .             .              .		  
#         |             |              |           .	  
# ,-. ,-. |-. ,-. . ,-. |  ,_, ,-. ,-. |-. ,-,-. . |- ,_, 
# | | ,-| | | |   | |-' |   /  `-. |   | | | | | | |   /  
# `-| `-^ ^-' '   ' `-' `' '"' `-' `-' ' ' ' ' ' ' `' '"' 
#  ,|							  
#  `'							  
# GITHUB:https://github.com/gabrielzschmitz		  
# INSTAGRAM:https://www.instagram.com/gabrielzschmitz_/   
# DOTFILES:https://github.com/gabrielzschmitz/dotfiles/   
# Screenshot taker menu using dmenu and scrot

# Get main monitor size and position
mainsp="$(xrandr | grep -E " primary*" | cut -d ' ' -f4)"
mainsx="$(echo "${mainsp%%x*}")"
mainsy="$(echo "${mainsp##*x}" | cut -d'+' -f1)"
mainx="$(echo "${mainsp##*x}" | cut -d'+' -f2)"
mainy="$(echo "${mainsp##*x}" | cut -d'+' -f3)"

# Check if there is a external monitor
extconnected="$(xrandr | grep -E " connected*" | wc -l)"
# Get external monitor size and position
extsp="$(xrandr | grep -E " connected*" | grep -v -E "primary*" | cut -d ' ' -f3)"
extsx="$(echo "${extsp%x*}")"
extsy="$(echo "${extsp#*x}" | cut -d'+' -f1)"
extx="$(echo "${extsp#*x}" | cut -d'+' -f2)"
exty="$(echo "${extsp#*x}" | cut -d'+' -f3)"

# Options
main="  Print main monitor"
ext="  Print external monitor"
all="  Print all monitors"
area="麗 Select a area to print"
maintimer=" 福 Print main monitor (10s timer)"
exttimer=" 福 Print external monitor (10s timer)"
alltimer=" 福 Print all monitors (10s timer)"

# Variables
case $extconnected in
    '1')
        options="$main\n$area\n$maintimer"
    ;;
    *)
        options="$main\n$ext\n$all\n$area\n$maintimer\n$exttimer\n$alltimer"
    ;;
esac

# Choices
chosen="$(printf "$options" | dmenucenter -l 7)"
case $chosen in
    "$main")
                sleep 0.5 && pic="$HOME/pic/main-$(date +%H:%M:%S).png" && scrot "$pic" --autoselect "$mainx","$mainy","$mainsx","$mainsy" --quality 100 --freeze &&
                xclip -t image/png $pic -selection clipboard && notify-send -i $pic "  Screnshot taken" "and copied to clipboard"
        ;;
    "$ext")
                sleep 0.5 && pic="$HOME/pic/ext-$(date +%H:%M:%S).png" && scrot "$pic" --autoselect "$extx","$exty","$extsx","$extsy" --quality 100 --freeze &&
                xclip -t image/png $pic -selection clipboard && notify-send -i $pic "  Screnshot taken" "and copied to clipboard"
	;;
    "$all")
                sleep 0.5 && pic="$HOME/pic/all-$(date +%H:%M:%S).png" && scrot "$pic" --quality 100 --freeze &&
                xclip -t image/png $pic -selection clipboard && notify-send -i $pic "  Screnshot taken" "and copied to clipboard"
        ;;
    "$area")
                pkill xbanish ; sleep 0.5 && pic="$HOME/pic/area-$(date +%H:%M:%S).png" && scrot "$pic" --select --quality 100 --freeze &&
                xclip -t image/png $pic -selection clipboard && notify-send -i $pic "  Screnshot taken" "and copied to clipboard" && xbanish -i mod4 -i mod1 -i shift -i control &
        ;;
    "$maintimer")
		notify-send $pic "  Taking the screenshot in 10s..." &
                pic="$HOME/pic/maintimer-$(date +%H:%M:%S).png" && scrot "$pic" --autoselect "$mainx","$mainy","$mainsx","$mainsy" --quality 100 --delay 10 --freeze &&
                xclip -t image/png $pic -selection clipboard && notify-send -i $pic "  Screnshot taken" "and copied to clipboard"
        ;;
    "$exttimer")
		notify-send $pic "  Taking the screenshot in 10s..." &
                pic="$HOME/pic/exttimer-$(date +%H:%M:%S).png" && scrot "$pic" --autoselect "$extx","$exty","$extsx","$extsy" --quality 100 --delay 10 --freeze &&
                xclip -t image/png $pic -selection clipboard && notify-send -i $pic "  Screnshot taken" "and copied to clipboard"
        ;;
    "$alltimer")
		notify-send $pic "  Taking the screenshot in 10s..." &
                pic="$HOME/pic/alltimer-$(date +%H:%M:%S).png" && scrot "$pic" --quality 100 --delay 10 --freeze &&
                xclip -t image/png $pic -selection clipboard && notify-send -i $pic "  Screnshot taken" "and copied to clipboard"
        ;;
esac

